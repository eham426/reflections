
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to make different versions or try out new features.

What happens when you initialize a repository? Why do you need to do it?

It creates the repository. It needs to be done so commits can be stored in the .git directory.

How is the staging area different from the working directory and the 
repository? What value do you think it offers?

	The staging area is of stuff that's about to be committed, while the
	 working directory won't be affected.It lets you set up a customized
	  commit. You can pick and choose which files to commit to create a more logical checkpoint.

How can you use the staging area to make sure you have one commit per logical
change?
	
	First you only put the files relevant to the commit in the staging area. Then you can check the changes by running git diff (compares the working directory with the staging area) and git diff --staging (compares working directory with most recent commit) to make sure that the changes within the files fit the theme for the commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?